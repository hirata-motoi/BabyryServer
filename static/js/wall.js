// Generated by CoffeeScript 1.6.3
(function() {
  var child_ids_hash, console, count, page, stamp_ids_hash;

  if (typeof window.console === "undefined") {
    console = {};
    console.log = console.warn = console.error = function(a) {};
  }

  if (window.entryData === "undefined") {
    window.entryData = {};
  }

  page = 1;

  count = 10;

  window.showGroupByModal;

  window.stamp_ids = [];

  window.child_ids = [];

  window.album_attr = [];

  window.album_key_id = "";

  window.profile;

  stamp_ids_hash = [];

  child_ids_hash = [];

  $(function() {
    var delete_attr, getXSRFToken, grid, load_contents, tmpl, tmpl_album, tmpl_album_edit, tmpl_album_element, tmpl_child, tmpl_stamp;
    getXSRFToken = function() {
      var c, cookies, matched, token, _i, _len;
      cookies = document.cookie.split(/\s*;\s*/);
      for (_i = 0, _len = cookies.length; _i < _len; _i++) {
        c = cookies[_i];
        matched = c.match(/^XSRF-TOKEN=(.*)$/);
        if (matched != null) {
          token = matched[1];
        }
      }
      return token;
    };
    tmpl = _.template($('#template-item').html());
    grid = $('.timeline').get(0);
    tmpl_album = _.template($('#template-album').html());
    tmpl_album_edit = _.template($('#template-album-edit').html());
    tmpl_album_element = _.template($('#template-album-element').html());
    $("#group_by_stamp").show();
    $("#custom_album").show();
    load_contents = function(stamp_ids, child_ids) {
      return $.ajax({
        url: '/entry/search.json',
        dataType: "json",
        traditional: true,
        data: {
          stamp_id: stamp_ids,
          child_id: child_ids,
          count: count,
          page: page
        },
        success: function(data) {
          var i, item, _i, _j, _ref, _ref1;
          if (data.data.entries.length < 1) {
            return;
          }
          item = [];
          for (i = _i = 0, _ref = data.data.entries.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
            item.push(document.createElement('article'));
          }
          salvattore.append_elements(grid, item);
          for (i = _j = 0, _ref1 = data.data.entries.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
            item[i].outerHTML = tmpl({
              stamp_num: data.data.entries[i].stamps.length,
              comment_num: data.data.entries[i].comments.length,
              fullsize_image_url: data.data.entries[i].fullsize_image_url,
              entryIndex: i + (page - 1) * count
            });
          }
          if (count > data.data.entries.length + 1) {
            $('#load-more').hide();
          }
          page++;
          if (window.entryData.entries === "undefined") {
            window.entryData.entries = [];
          }
          window.entryData.entries = window.entryData.entries.concat(data.data.entries);
          window.entryData.metadata = data.metadata;
          return window.util.showImageDetail();
        },
        error: function() {
          return window.console.log("error");
        }
      });
    };
    load_contents(window.stamp_ids, window.child_ids);
    $('#load-more').on('click', function() {
      return load_contents(window.stamp_ids, window.child_ids);
    });
    $('#image_upload').on('click', function() {
      return location.href = '/image/web/upload';
    });
    $('#group_by_stamp').on('click', function(e) {
      return window.showGroupByModal(e);
    });
    tmpl_stamp = _.template($('#template-stamp').html());
    tmpl_child = _.template($('#template-child').html());
    window.showGroupByModal = function(e) {
      e.stopPropagation();
      $("#groupByStampModal").modal({
        "backdrop": true
      });
      $.ajax({
        "url": "/profile/get.json",
        "type": "get",
        "processData": true,
        "contentType": false,
        success: function(response) {
          var HTML, i, _i, _ref, _results;
          $("#modal_group_by_child").html('');
          _results = [];
          for (i = _i = 0, _ref = response.child.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
            HTML = tmpl_child({
              name: response.child[i].child_name,
              id: response.child[i].child_id
            });
            $("#modal_group_by_child").append(HTML);
            _results.push($("#" + response.child[i].child_id).on('click', function() {
              if ($(this).attr('class') === "child-name-color-gray") {
                $(this).attr('class', 'child-name-color');
                return child_ids_hash[$(this).attr('id')] = 1;
              } else {
                $(this).attr('class', 'child-name-color-gray');
                return child_ids_hash[$(this).attr('id')] = 0;
              }
            }));
          }
          return _results;
        }
      });
      return $.ajax({
        "url": "/stamp/list.json",
        "type": "get",
        "processData": true,
        "contentType": false,
        success: function(response) {
          var HTML, i, _i, _ref, _results;
          stamp_ids_hash = {};
          child_ids_hash = {};
          $("#modal_group_by_stamp").html('');
          _results = [];
          for (i = _i = 0, _ref = response.data.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
            HTML = tmpl_stamp({
              id: response.data[i].stamp_id,
              url: response.data[i].icon_url
            });
            $("#modal_group_by_stamp").append(HTML);
            _results.push($("#" + response.data[i].stamp_id).on('click', function() {
              if ($(this).attr('class') === "listed-stamp") {
                $(this).attr('class', 'listed-stamp gray-image');
                return stamp_ids_hash[$(this).attr('id')] = 0;
              } else {
                $(this).attr('class', 'listed-stamp');
                return stamp_ids_hash[$(this).attr('id')] = 1;
              }
            }));
          }
          return _results;
        }
      });
    };
    $("#groupByStampModalSubmit").on('click', function() {
      var key;
      $("#groupByStampModal").modal('hide');
      $(".column.size-1of2").empty();
      window.entryData.entries = [];
      page = 1;
      window.stamp_ids = [];
      for (key in stamp_ids_hash) {
        if (stamp_ids_hash[key] === 1) {
          window.stamp_ids.push(key);
        }
      }
      window.child_ids = [];
      for (key in child_ids_hash) {
        if (child_ids_hash[key] === 1) {
          window.child_ids.push(key);
        }
      }
      return load_contents(window.stamp_ids, window.child_ids);
    });
    $("#custom_album").on('click', function() {
      $(".column.size-1of2").empty();
      $('#album-items').empty();
      $('#load-more').hide();
      window.entryData.entries = [];
      page = 1;
      $.ajax({
        "url": "/profile/get.json",
        "type": "get",
        "processData": true,
        "contentType": false,
        success: function(data) {
          return window.profile = data;
        },
        error: function(data) {
          return window.console.log("error");
        }
      });
      return $.ajax({
        url: '/album/search.json',
        dataType: "json",
        traditional: true,
        success: function(data) {
          var HTML, attribute_id, i, j, _i, _j, _k, _ref, _ref1, _ref2, _results;
          _results = [];
          for (i = _i = 0, _ref = data.album_attribute.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
            window.album_attr[data.album_attribute[i].album_id] = data.album_attribute[i];
            HTML = tmpl_album({
              name: data.album_attribute[i].name,
              album_id: data.album_attribute[i].album_id
            });
            $('#album-items').append(HTML);
            $('#album_id_' + data.album_attribute[i].album_id).on('click', function() {
              window.stamp_ids = [];
              window.child_ids = window.album_attr[$(this).attr("album_id")].child_ids;
              load_contents(window.stamp_ids, window.child_ids);
              $('#load-more').show();
              return $('#album-items').empty();
            });
            HTML = tmpl_album_edit({
              name: data.album_attribute[i].name,
              id: data.album_attribute[i].album_id
            });
            $('#album_setting_id_' + data.album_attribute[i].album_id).append(HTML);
            attribute_id = 0;
            if (data.album_attribute[i].child_data.length > 0) {
              for (j = _j = 0, _ref1 = data.album_attribute[i].child_data.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; j = 0 <= _ref1 ? ++_j : --_j) {
                HTML = tmpl_album_element({
                  id: data.album_attribute[i].album_id,
                  attr_id: attribute_id,
                  key: "写真の子供",
                  value: data.album_attribute[i].child_data[j].child_name
                });
                $('#album-edit-element_' + data.album_attribute[i].album_id).append(HTML);
                $('#album_attr_delete_' + data.album_attribute[i].album_id + '_' + attribute_id).on('click', function() {
                  return delete_attr('child_id', $(this).attr('album_attr_delete_id'), $(this).attr('album_attr_delete_value'));
                });
                attribute_id += 1;
              }
            }
            if (data.album_attribute[i].relative_data.length > 0) {
              for (j = _k = 0, _ref2 = data.album_attribute[i].relative_data.length - 1; 0 <= _ref2 ? _k <= _ref2 : _k >= _ref2; j = 0 <= _ref2 ? ++_k : --_k) {
                HTML = tmpl_album_element({
                  id: data.album_attribute[i].album_id,
                  key: "シェア先",
                  attr_id: attribute_id,
                  value: data.album_attribute[i].relative_data[j].relative_name
                });
                $('#album-edit-element_' + data.album_attribute[i].album_id).append(HTML);
                $('#album_attr_delete_' + data.album_attribute[i].album_id + '_' + attribute_id).on('click', function() {
                  return delete_attr('relative_id', $(this).attr('album_attr_delete_id'), $(this).attr('album_attr_delete_value'));
                });
                attribute_id += 1;
              }
            }
            $('#new_album_key_' + data.album_attribute[i].album_id).append('<option value="1">写真のこども</option>');
            $('#new_album_key_' + data.album_attribute[i].album_id).append('<option value="2">シェア先</option>');
            $('#new_album_key_' + data.album_attribute[i].album_id).on('change', function() {
              var _l, _m, _ref3, _ref4, _results1, _results2;
              $('#new_album_attr_' + $(this).attr('album_key_id')).empty();
              window.album_key_id = '';
              if ($(this).val() === "1") {
                window.album_key_id = 'child_id';
                _results1 = [];
                for (i = _l = 0, _ref3 = window.profile.child.length - 1; 0 <= _ref3 ? _l <= _ref3 : _l >= _ref3; i = 0 <= _ref3 ? ++_l : --_l) {
                  j = i + 1;
                  _results1.push($('#new_album_attr_' + $(this).attr('album_key_id')).append('<option value="' + window.profile.child[i].child_id + '">' + window.profile.child[i].child_name + '</option>'));
                }
                return _results1;
              } else if ($(this).val() === "2") {
                window.album_key_id = 'relative_id';
                _results2 = [];
                for (i = _m = 0, _ref4 = window.profile.relatives.length - 1; 0 <= _ref4 ? _m <= _ref4 : _m >= _ref4; i = 0 <= _ref4 ? ++_m : --_m) {
                  j = i + 1;
                  _results2.push($('#new_album_attr_' + $(this).attr('album_key_id')).append('<option value="' + window.profile.relatives[i].relative_id + '">' + window.profile.relatives[i].relative_name + '</option>'));
                }
                return _results2;
              }
            });
            $('#add_album_attr_' + data.album_attribute[i].album_id).on('click', function() {
              var token;
              token = getXSRFToken();
              return $.ajax({
                url: '/album/add_attr',
                dataType: "json",
                type: "post",
                data: {
                  "XSRF-TOKEN": token,
                  album_id: $(this).attr('add_album_attr_id'),
                  key: window.album_key_id,
                  attr: $('#new_album_attr_' + $(this).attr('add_album_attr_id')).val()
                },
                success: function(data) {
                  return window.console.log(data);
                },
                error: function(e) {
                  return window.console.log(e);
                }
              });
            });
            $('#album_edit_id_' + data.album_attribute[i].album_id).on('click', function() {
              $('#album_setting_id_' + $(this).attr('album_edit_id')).show();
              return $('#album_edit_id_' + $(this).attr('album_edit_id')).hide();
            });
            _results.push($('#album_name_edit_' + data.album_attribute[i].album_id).on('click', function() {
              var token;
              token = getXSRFToken();
              return $.ajax({
                url: '/album/edit_name',
                dataType: "json",
                type: "post",
                data: {
                  "XSRF-TOKEN": token,
                  album_id: $(this).attr('album_name_edit_id'),
                  album_name: $('#album_name_edit_form_' + $(this).attr('album_name_edit_id')).val()
                },
                success: function(data) {
                  return window.console.log("success");
                },
                error: function() {
                  return window.console.log("error");
                }
              });
            }));
          }
          return _results;
        },
        error: function() {
          return window.console.log("error");
        }
      });
    });
    return delete_attr = function(type, id, attr) {
      var token;
      token = getXSRFToken();
      return $.ajax({
        url: '/album/delete_attr',
        dataType: "json",
        type: "post",
        data: {
          "XSRF-TOKEN": token,
          album_id: id,
          attr_key: type,
          attr_value: attr
        },
        success: function(data) {
          return window.console.log(data);
        },
        error: function(e) {
          return window.console.log(e);
        }
      });
    };
  });

}).call(this);
